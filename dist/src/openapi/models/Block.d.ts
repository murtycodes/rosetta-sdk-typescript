/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.10
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BlockIdentifier, Transaction } from './';
/**
 * Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be _inalterable_: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.
 * @export
 * @interface Block
 */
export interface Block {
    /**
     *
     * @type {BlockIdentifier}
     * @memberof Block
     */
    block_identifier: BlockIdentifier;
    /**
     *
     * @type {BlockIdentifier}
     * @memberof Block
     */
    parent_block_identifier: BlockIdentifier;
    /**
     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     * @type {number}
     * @memberof Block
     */
    timestamp: number;
    /**
     *
     * @type {Array<Transaction>}
     * @memberof Block
     */
    transactions: Array<Transaction>;
    /**
     *
     * @type {object}
     * @memberof Block
     */
    metadata?: object;
}
export declare function BlockFromJSON(json: any): Block;
export declare function BlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): Block;
export declare function BlockToJSON(value?: Block | null): any;
//# sourceMappingURL=Block.d.ts.map