/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.10
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CoinAction, CoinIdentifier } from './';
/**
 * CoinChange is used to represent a change in state of a some coin identified by a coin_identifier. This object is part of the Operation model and must be populated for UTXO-based blockchains. Coincidentally, this abstraction of UTXOs allows for supporting both account-based transfers and UTXO-based transfers on the same blockchain (when a transfer is account-based, don't populate this model).
 * @export
 * @interface CoinChange
 */
export interface CoinChange {
    /**
     *
     * @type {CoinIdentifier}
     * @memberof CoinChange
     */
    coin_identifier: CoinIdentifier;
    /**
     *
     * @type {CoinAction}
     * @memberof CoinChange
     */
    coin_action: CoinAction;
}
export declare function CoinChangeFromJSON(json: any): CoinChange;
export declare function CoinChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoinChange;
export declare function CoinChangeToJSON(value?: CoinChange | null): any;
//# sourceMappingURL=CoinChange.d.ts.map